<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.education.supplier.dao.SupplierOrderMapper">
  <resultMap id="BaseResultMap" type="com.education.supplier.model.SupplierOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="supplier_id" jdbcType="INTEGER" property="supplierId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="delete_status" jdbcType="BIT" property="deleteStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_id, user_id, supplier_id, status, delete_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_supplier_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_supplier_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.education.supplier.model.SupplierOrder">
    insert into t_supplier_order (id, goods_id, user_id, 
      supplier_id, status, delete_status
      )
    values (#{id,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{supplierId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{deleteStatus,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.education.supplier.model.SupplierOrder">
    insert into t_supplier_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.education.supplier.model.SupplierOrder">
    update t_supplier_order
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.education.supplier.model.SupplierOrder">
    update t_supplier_order
    set goods_id = #{goodsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      delete_status = #{deleteStatus,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>